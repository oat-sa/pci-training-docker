define("simplePCI/runtime/helper/properties",[],function(){const defaultProperties={prompt:"Please enter your name:",submit:"OK",output:"Hello dear {name}! How is your day?",name:"{name}"};return{formatOutput(message,name){return message.replaceAll("{name}",name)},getProperties(properties){return Object.assign({},defaultProperties,properties)}}}),define("tpl!simplePCI/creator/tpl/propertiesForm",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,options,buffer="",helperMissing=helpers.helperMissing,escapeExpression=this.escapeExpression;return buffer+="<div class=\"panel\">\n    <label>\n        <span>Submit</span>\n        <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content:first\" data-tooltip-theme=\"info\"></span>\n        <span class=\"tooltip-content\">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"The caption of the submit button",options):helperMissing.call(depth0,"__","The caption of the submit button",options)))+"</span>\n        <input type=\"text\" name=\"submit\" value=\"",(helper=helpers.submit)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.submit,stack1="function"===typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+"\">\n    </label>\n    <label>\n        <span>Prompt</span>\n        <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content:first\" data-tooltip-theme=\"info\"></span>\n        <span class=\"tooltip-content\">"+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},helper?helper.call(depth0,"The text of the prompt message asking the user for its name",options):helperMissing.call(depth0,"__","The text of the prompt message asking the user for its name",options)))+"</span>\n        <textarea name=\"prompt\">",(helper=helpers.prompt)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.prompt,stack1="function"===typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+"</textarea>\n    </label>\n</panel>",buffer})}),define("simplePCI/creator/widget/states/Question",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","taoQtiItem/qtiCreator/editor/simpleContentEditableElement","simplePCI/runtime/helper/properties","tpl!simplePCI/creator/tpl/propertiesForm"],function(stateFactory,Question,formElement,simpleEditor,propHelper,formTpl){"use strict";var stateQuestion=stateFactory.extend(Question,function(){const{widget}=this,{$container,element:interaction}=widget,{pci}=interaction.metaData,pciMarkup=widget.$original.find(".simple_pci").get(0);simpleEditor.create($container,".simple-pci-message",value=>{const renderer=pci.getRenderer();renderer.setMessage(value),interaction.prop("message",value)}),pciMarkup.classList.add("authoring"),interaction.triggerPci("enteringcreator")},function(){const{widget}=this,{$container,element:interaction}=widget,pciMarkup=widget.$original.find(".simple_pci").get(0);simpleEditor.destroy($container),pciMarkup.classList.remove("authoring"),interaction.triggerPci("leavingcreator")});return stateQuestion.prototype.initForm=function(){const{widget}=this,{element:interaction}=widget,{pci}=interaction.metaData,$form=this.widget.$form,props=propHelper.getProperties(interaction.properties);let{submit,prompt}=props;this.widget.$form.html(formTpl({submit,prompt})),formElement.initWidget(this.widget.$form),formElement.setChangeCallbacks($form,interaction,{submit(i,value){i.prop("submit",value),interaction.triggerPci("setsubmit",[value])},prompt(i,value){i.prop("prompt",value);const renderer=pci.getRenderer();renderer.setPrompt(value),renderer.renderInput()}})},stateQuestion}),define("simplePCI/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","simplePCI/creator/widget/states/Question"],function(factory,states,QuestionState){"use strict";return factory.createBundle(states,[QuestionState],["answer","correct","map"])}),define("simplePCI/creator/widget/Widget",["taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","simplePCI/creator/widget/states/states"],function(Widget,states){"use strict";const interactionWidget=Widget.clone();return interactionWidget.initCreator=function(){this.registerStates(states),Widget.initCreator.call(this)},interactionWidget}),define("tpl!simplePCI/creator/tpl/markup",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){return this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{},"<div class=\"simple_pci\" data-serial=\"${templateData.serial}\"></div>"})}),define("simplePCI/imsPciCreator",["simplePCI/creator/widget/Widget","tpl!simplePCI/creator/tpl/markup"],function(Widget,markupTpl){"use strict";return{getTypeIdentifier(){return"simplePCI"},getWidget(){return Widget},getDefaultProperties(){return{prompt:"Please enter your name:",submit:"OK",output:"Hello dear {name}! How is your day?"}},afterCreate(){},getMarkupTemplate(){return markupTpl},getMarkupData(pci,defaultData){return Object.assign({serial:Date.now()},defaultData)}}}),define(["simplePCI/imsPciCreator"],function(IMSPCI){return IMSPCI});